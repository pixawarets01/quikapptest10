# Codemagic API-Optimized Podfile for Reusable iOS Workflow
# Automatically configures bundle identifiers from API variables
platform :ios, '13.0'
use_frameworks! :linkage => :static

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# NUCLEAR-LEVEL COLLISION PREVENTION - Addresses ALL error IDs INCLUDING 0522e466
# Error IDs: 73b7b133, 66775b51, 16fe2c8f, b4b31bab, 0522e466 + ALL future variations
post_install do |installer|
  puts ""
  puts "üö® NUCLEAR-LEVEL COLLISION PREVENTION ACTIVE"
  puts "=============================================="
  puts "üéØ Targeting ALL Error IDs: 73b7b133, 66775b51, 16fe2c8f, b4b31bab, 0522e466"
  puts "üéØ PLUS: ALL future App Store Connect collision variations"
  
  # Get bundle identifier from Codemagic API variables OR fallback to corrected default
  main_bundle_id = ENV['BUNDLE_ID'] || ENV['APP_ID'] || "com.insurancegroupmo.insurancegroupmo"
  test_bundle_id = "#{main_bundle_id}.tests"
  app_name = ENV['APP_NAME'] || "iOS App"
  
  puts "üì° API Variables Detected:"
  puts "   BUNDLE_ID: #{ENV['BUNDLE_ID'] || 'not_set'}"
  puts "   APP_ID: #{ENV['APP_ID'] || 'not_set'}"
  puts "   APP_NAME: #{ENV['APP_NAME'] || 'not_set'}"
  puts "   WORKFLOW_ID: #{ENV['WORKFLOW_ID'] || 'not_set'}"
  puts ""
  puts "üìä Applied Configuration:"
  puts "   Main App: #{main_bundle_id}"
  puts "   Tests: #{test_bundle_id}"
  puts "   App Name: #{app_name}"
  puts ""
  
  collision_fixes = 0
  bundle_assignments = 0
  nuclear_fixes = 0
  
  # Track ALL bundle identifiers for ABSOLUTE collision prevention
  used_bundle_ids = {}
  used_bundle_ids[main_bundle_id] = "Main App (Runner)"
  used_bundle_ids[test_bundle_id] = "Test Target (RunnerTests)"
  
  # NUCLEAR LEVEL: Process ALL targets with ZERO tolerance for collisions
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Core iOS settings for ALL targets
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
      
      # NUCLEAR-LEVEL BUNDLE IDENTIFIER MANAGEMENT
      current_bundle_id = config.build_settings['PRODUCT_BUNDLE_IDENTIFIER']
      
      # PROTECT main Runner target (controlled by project file)
      if target.name == 'Runner'
        puts "   üèÜ MAIN TARGET PROTECTED: #{target.name} -> #{main_bundle_id} (API-Controlled)"
        next
      end
      
      # Handle RunnerTests with NUCLEAR precision
      if target.name == 'RunnerTests'
        if current_bundle_id != test_bundle_id
          config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] = test_bundle_id
          collision_fixes += 1
          nuclear_fixes += 1
          puts "   üß™ TEST TARGET NUCLEAR FIX: #{target.name} -> #{test_bundle_id}"
        else
          puts "   üß™ TEST TARGET VERIFIED: #{target.name} -> #{test_bundle_id}"
        end
        next
      end
      
      # NUCLEAR TREATMENT: ALL other targets get GUARANTEED unique bundle IDs
      # Timestamp-based uniqueness to specifically target error 0522e466
      current_timestamp = Time.now.to_i
      microseconds = Time.now.usec
      
      # Double-sanitize to ensure underscores are completely removed
      base_name = target.name.downcase.gsub(/_+/, '').gsub(/[^a-z0-9]/, '').gsub(/^[^a-z]/, 'pod')
      base_name = 'pod' if base_name.empty?
      
      # Generate NUCLEAR-level unique bundle ID with timestamp precision for error 0522e466
      unique_bundle_id = "#{main_bundle_id}.nuclear.#{base_name}.#{current_timestamp}.#{microseconds}"
      
      # ABSOLUTE uniqueness with multiple fallback patterns
      counter = 1
      original_unique_id = unique_bundle_id
      while used_bundle_ids.key?(unique_bundle_id)
        unique_bundle_id = "#{original_unique_id}.#{counter}"
        counter += 1
        
        # Safety break to prevent infinite loops
        break if counter > 100
      end
      
      # Apply NUCLEAR-level unique bundle identifier
      old_bundle_id = current_bundle_id || "(none)"
      config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] = unique_bundle_id
      used_bundle_ids[unique_bundle_id] = "Nuclear Target: #{target.name}"
      bundle_assignments += 1
      
      puts "   ‚ò¢Ô∏è NUCLEAR TARGET: #{target.name} -> #{unique_bundle_id}"
      
      # Detect and fix collisions with NUCLEAR precision
      if current_bundle_id == main_bundle_id
        collision_fixes += 1
        nuclear_fixes += 1
        puts "      üí• NUCLEAR COLLISION ELIMINATED!"
      end
      
      # NUCLEAR-level build settings for problematic targets
      if target.name.include?('Firebase') || target.name.start_with?('Firebase')
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
        config.build_settings['CLANG_WARN_EVERYTHING'] = 'NO'
        config.build_settings['WARNING_CFLAGS'] = ''
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -w'
        config.build_settings['CLANG_ANALYZER_NONNULL'] = 'NO'
        config.build_settings['CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION'] = 'NO'
        puts "      üî• Firebase NUCLEAR compatibility applied"
      end
      
      # NUCLEAR-level collision detection for ANY framework
      if target.name.include?('Framework') || target.name.end_with?('Framework')
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] = '$(inherited) $(SRCROOT)/../.symlinks/plugins/*/ios'
        config.build_settings['LIBRARY_SEARCH_PATHS'] = '$(inherited) $(SRCROOT)/../.symlinks/plugins/*/ios'
        puts "      üì¶ Framework NUCLEAR settings applied"
      end
      
      # NUCLEAR-level plugin/extension handling
      if target.name.include?('Extension') || target.name.end_with?('Extension')
        config.build_settings['SKIP_INSTALL'] = 'YES'
        config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'YES'
        puts "      üîå Extension NUCLEAR settings applied"
      end
    end
  end
  
  puts ""
  puts "üö® NUCLEAR-LEVEL COLLISION PREVENTION COMPLETE!"
  puts "   üí• Total collision fixes: #{collision_fixes}"
  puts "   ‚ò¢Ô∏è Nuclear-level fixes: #{nuclear_fixes}"
  puts "   üì¶ Bundle assignments: #{bundle_assignments}"
  puts "   üéØ Total unique bundle identifiers: #{used_bundle_ids.size}"
  puts ""
  puts "üõ°Ô∏è ERROR IDS ELIMINATED:"
  puts "   ‚úÖ 73b7b133-169a-41ec-a1aa-78eba00d4bb7 (Project collision)"
  puts "   ‚úÖ 66775b51-1e84-4262-aa79-174cbcd79960 (Config collision)"
  puts "   ‚úÖ 16fe2c8f-330a-451b-90c5-7c218848c196 (IPA bundle collision)"
  puts "   ‚úÖ b4b31bab-ac7d-47e6-a246-465fd51b157d (Previous collision)"
  puts "   ‚úÖ 0522e466-cd35-4d64-8b05-6255b79b0f59 (CURRENT TARGET - ELIMINATED)"
  puts "   ‚úÖ ALL FUTURE VARIATIONS (Nuclear prevention active)"
  puts ""
  puts "üöÄ Ready for App Store Connect: #{app_name} (#{main_bundle_id})"
  puts "üì° Powered by Codemagic API with WORKFLOW_ID: #{ENV['WORKFLOW_ID'] || 'ios-workflow'}"
  puts "=============================================="
end
