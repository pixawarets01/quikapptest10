# Emergency Bundle Identifier Collision Fix - Podfile
platform :ios, '13.0'
use_frameworks! :linkage => :static

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# EMERGENCY BUNDLE IDENTIFIER COLLISION FIX
post_install do |installer|
  puts "ðŸš¨ EMERGENCY BUNDLE IDENTIFIER COLLISION FIX ACTIVE"
  
  main_bundle_id = "com.twinklub.twinklub"
  collision_fixes = 0
  
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Core settings
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
      
      # CRITICAL: Ensure EVERY pod target has a unique bundle identifier
      # Skip only the main Runner target (handled by project file)
      next if target.name == 'Runner' || target.name == 'RunnerTests'
      
      # Generate safe, unique bundle identifier for this pod target
      safe_name = target.name.downcase.gsub(/[^a-z0-9]/, '')
      unique_bundle_id = "#{main_bundle_id}.pod.#{safe_name}"
      
      # Force unique bundle identifier
      config.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] = unique_bundle_id
      collision_fixes += 1
      
      puts "   ðŸ”§ COLLISION FIX: #{target.name} -> #{unique_bundle_id}"
      
      # Firebase compatibility
      if target.name.include?('Firebase') || target.name.start_with?('Firebase')
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
        config.build_settings['CLANG_WARN_EVERYTHING'] = 'NO'
        config.build_settings['WARNING_CFLAGS'] = ''
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -w'
      end
    end
  end
  
  puts "ðŸš¨ EMERGENCY COLLISION FIX COMPLETE!"
  puts "   ðŸ”§ Pod targets fixed: #{collision_fixes}"
  puts "   ðŸŽ¯ All targets now have guaranteed unique bundle identifiers"
  puts "   ðŸ“± Main app: #{main_bundle_id}"
  puts "   ðŸ§ª Tests: #{main_bundle_id}.tests"
  puts "   ðŸ“¦ Pods: #{main_bundle_id}.pod.{name}"
end
